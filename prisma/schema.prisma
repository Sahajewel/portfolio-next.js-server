// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  username  String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  blogs   Blog[]
  resumes Resume[]

  @@map("users")
}

model Blog {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  content     String
  excerpt     String?
  thumbnail   String?
  published   Boolean  @default(false)
  views       Int      @default(0)
  tags        String[]
  metaTitle   String?
  metaDesc    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  author   User   @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId String

  @@map("blogs")
}

model Project {
  id          String   @id @default(cuid())
  title       String
  description String
  thumbnail   String?
  liveUrl     String?
  githubUrl   String?
  technologies String[]
  featured    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("projects")
}

model Resume {
  id        String   @id @default(cuid())
  data      Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  @@map("resumes")
}

model Analytics {
  id         String   @id @default(cuid())
  page       String
  views      Int      @default(1)
  uniqueViews Int      @default(1)
  date       DateTime @default(now())

  @@map("analytics")
}

enum Role {
  USER
  ADMIN
}